mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = as.vector(unlist(tech_dict[tech])),
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
#################################################################
rep_Tech = readGDX(gdxName = file, requestList = 'report_tech', restore_zeros = TRUE, factors = FALSE)
#################################################################
rep_Tech = gdx::readGDX(gdxName = file, requestList = 'report_tech', restore_zeros = TRUE, factors = FALSE)
source(paste0(mypath, "library_import.R"))
packages <- c("gdxrrw", "reshape2", "quitte", "ggplot2", "dplyr", "tidyr", "grid", "readxl",
"ggthemes", "gridExtra", "cowplot", "lubridate", "RColorBrewer", "openxlsx", "zoo" )
#updating packages
for (i in packages) {
if(!require(i, character.only=TRUE)){
install.packages(i, character.only=TRUE)
library(i,character.only=TRUE)
}
}
packages <- c("gdxrrw", "reshape2", "quitte", "ggplot2", "dplyr", "tidyr", "grid", "readxl",
"ggthemes", "gridExtra", "cowplot", "lubridate", "RColorBrewer", "openxlsx", "zoo" )
#updating packages
for (i in packages) {
if(!require(i, character.only=TRUE)){
install.packages(i, character.only=TRUE)
library(i,character.only=TRUE)
}
}
source('~/remind/dataprocessing/library_import.R')
source('~/remind/dataprocessing/library_import.R')
source('~/remind/dataprocessing/library_import.R')
# get data from config.R file
# file: config.R
require(quitte)
require(gdxrrw)
require(tidyverse)
options(scipen = 999) #disable scientific notation
mypath = "~/remind/dataprocessing/DIETER_plots/"
mydatapath = "~/remind/output/capfac15/"
source(paste0(mypath, "library_import.R"))
variable_units <- read.csv(paste0(mypath, "variable_dict.csv"), sep = ',', header = T, stringsAsFactors = F)
variables <- unique(variable_units$dieter_name)
variable_dict <- setNames(as.list(variable_units$report_name), variable_units$dieter_name)
unit_dict <- setNames(as.list(variable_units$Units), variable_units$dieter_name)
# CHECK IF THE SEPERATOR IS CORRECT!!!!!!!!!! sometimes it is changed from ; to , in Linux and windows
tech_dictionary <- read.csv(paste0(mypath, "tech_dict.csv"), sep = ",", header = T, stringsAsFactors = F)
tech_dict <- setNames(as.list(tech_dictionary$report_name), tech_dictionary$dieter_name)
gdxToQuitte <- function(gdxfile){
gdxfile = "report_DIETER_i5.gdx"
file = paste0(mydatapath, gdxfile)
out_annual <- NULL
###########################################################################################################################
rep = read.gdx(gdxName = file, requestList = 'report', factors = FALSE)
names(rep) <- c("gdxfile", "model","year", "country","variable", "value")
out <- rep %>%
mutate(year = as.numeric(year)) %>%
complete(year = c(2025,2030,2035,2040,2045,2050,2055,2060,2070,2080,2090,2100)) %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = "all Tech",
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech',factors = FALSE)
names(rep_Tech) <- c("gdxfile", "model","year", "country","variable", "tech", "value")
out_t <- rep_Tech %>%
# dplyr::group_by(tech) %>%
complete(nesting = c("year"),        fill = list(variable = 0)) %>%
# dplyr::ungroup(tech) %>%
mutate(tech = as.character(tech)) %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = as.vector(unlist(tech_dict[tech])),
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
#################################################################
out_annual <- rbind(out_annual, out)
out_annual <- rbind(out_annual, out_t)
idx <- as.numeric(str_extract(gdxfile, "[0-9]+"))
write.table(out_annual, paste0(mypath, "capfac15_i", idx, "_annualreport.csv"), sep = ";", row.names = F)
print(paste0("csv table saved to", mypath))
}
gdxfile = "report_DIETER_i5.gdx"
file = paste0(mydatapath, gdxfile)
out_annual <- NULL
###########################################################################################################################
rep = read.gdx(gdxName = file, requestList = 'report', factors = FALSE)
names(rep) <- c("gdxfile", "model","year", "country","variable", "value")
out <- rep %>%
mutate(year = as.numeric(year)) %>%
complete(year = c(2025,2030,2035,2040,2045,2050,2055,2060,2070,2080,2090,2100)) %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = "all Tech",
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech',factors = FALSE)
names(rep_Tech) <- c("gdxfile", "model","year", "country","variable", "tech", "value")
out_t <- rep_Tech %>%
# dplyr::group_by(tech) %>%
complete(nesting = c("year"),        fill = list(variable = 0)) %>%
# dplyr::ungroup(tech) %>%
mutate(tech = as.character(tech)) %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = as.vector(unlist(tech_dict[tech])),
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
out_t <- rep_Tech %>%
# dplyr::group_by(tech) %>%
# complete(nesting = c("year"),        fill = list(variable = 0)) %>%
# dplyr::ungroup(tech) %>%
mutate(tech = as.character(tech)) %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = as.vector(unlist(tech_dict[tech])),
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
View(out_t)
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech', squeeze = FALSE, factors = FALSE)
install.packages("quitte")
install.packages("quitte")
install.packages("quitte")
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech', squeeze = FALSE, factors = FALSE)
out_t <- rep_Tech %>%
complete(nesting = c("gdxfile", "model","year", "country","variable", "tech", "value"),
fill = list(variable = 0))
out_t <- rep_Tech %>%
complete(nesting = c("gdxfile", "model","year", "country","variable", "tech", "value"),
fill = list(value = 0))
out_t <- rep_Tech %>%
complete(nesting = c("gdxfile", "model","year", "country","variable", "tech", "value"),
fill = list(value = 0))
out_t <- rep_Tech %>%
complete(nesting = c("gdxfile", "model","year", "country","variable", "tech", "value"), fill = list(value = 0))
rep_Tech %>%
complete(nesting = c("gdxfile", "model","year", "country","variable", "tech", "value"), fill = list(value = 0))
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech',factors = FALSE)
# get data from config.R file
# file: config.R
require(quitte)
require(gdxrrw)
require(tidyverse)
options(scipen = 999) #disable scientific notation
mypath = "~/remind/dataprocessing/DIETER_plots/"
mydatapath = "~/remind/output/capfac15/"
source(paste0(mypath, "library_import.R"))
variable_units <- read.csv(paste0(mypath, "variable_dict.csv"), sep = ',', header = T, stringsAsFactors = F)
variables <- unique(variable_units$dieter_name)
variable_dict <- setNames(as.list(variable_units$report_name), variable_units$dieter_name)
unit_dict <- setNames(as.list(variable_units$Units), variable_units$dieter_name)
# CHECK IF THE SEPERATOR IS CORRECT!!!!!!!!!! sometimes it is changed from ; to , in Linux and windows
tech_dictionary <- read.csv(paste0(mypath, "tech_dict.csv"), sep = ",", header = T, stringsAsFactors = F)
tech_dict <- setNames(as.list(tech_dictionary$report_name), tech_dictionary$dieter_name)
gdxfile = "report_DIETER_i5.gdx"
file = paste0(mydatapath, gdxfile)
out_annual <- NULL
###########################################################################################################################
rep = read.gdx(gdxName = file, requestList = 'report', factors = FALSE)
names(rep) <- c("gdxfile", "model","year", "country","variable", "value")
gdxfile = "report_DIETER_i5.gdx"
file = paste0(mydatapath, gdxfile)
out_annual <- NULL
###########################################################################################################################
rep = read.gdx(gdxName = file, requestList = 'report', factors = FALSE)
mydatapath = "~/remind/output/capfac15/"
gdxfile = "report_DIETER_i5.gdx"
file = paste0(mydatapath, gdxfile)
out_annual <- NULL
file###########################################################################################################################
###########################################################################################################################
rep = read.gdx(gdxName = file, requestList = 'report', factors = FALSE)
igdx("/opt/gams/gams30.2_linux_x64_64_sfx")
variable_units <- read.csv(paste0(mypath, "variable_dict.csv"), sep = ',', header = T, stringsAsFactors = F)
variables <- unique(variable_units$dieter_name)
variable_dict <- setNames(as.list(variable_units$report_name), variable_units$dieter_name)
unit_dict <- setNames(as.list(variable_units$Units), variable_units$dieter_name)
# CHECK IF THE SEPERATOR IS CORRECT!!!!!!!!!! sometimes it is changed from ; to , in Linux and windows
tech_dictionary <- read.csv(paste0(mypath, "tech_dict.csv"), sep = ",", header = T, stringsAsFactors = F)
tech_dict <- setNames(as.list(tech_dictionary$report_name), tech_dictionary$dieter_name)
gdxfile = "report_DIETER_i5.gdx"
file = paste0(mydatapath, gdxfile)
out_annual <- NULL
###########################################################################################################################
rep = read.gdx(gdxName = file, requestList = 'report', factors = FALSE)
names(rep) <- c("gdxfile", "model","year", "country","variable", "value")
out <- rep %>%
mutate(year = as.numeric(year)) %>%
complete(year = c(2025,2030,2035,2040,2045,2050,2055,2060,2070,2080,2090,2100)) %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = "all Tech",
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech',factors = FALSE)
names(rep_Tech) <- c("gdxfile", "model","year", "country","variable", "tech", "value")
out_t <- rep_Tech %>%
complete(nesting = c("gdxfile", "model","year", "country","variable", "tech", "value"), fill = list(value = 0))
out_t <- rep_Tech %>%
complete(nesting = c("gdxfile", "model","year", "country","variable", "tech", "value"))
out_t <- rep_Tech %>%
complete( c("gdxfile", "model","year", "country","variable", "tech", "value"), fill = list(value = 0))
out_t <- rep_Tech %>%
complete( c("gdxfile", "model","year", "country","variable", "tech", "value"))
out_t <- rep_Tech %>%
complete(year = c(2025,2030,2035,2040,2045,2050,2055,2060,2070,2080,2090,2100)) %>%
complete( c("gdxfile", "model","year", "country","variable", "tech", "value"))
out_t <- rep_Tech %>%
mutate(year = as.numeric(year)) %>%
complete(year = c(2025,2030,2035,2040,2045,2050,2055,2060,2070,2080,2090,2100)) %>%
complete( c("gdxfile", "model","year", "country","variable", "tech", "value"))
out_t <- rep_Tech %>%
mutate(year = as.numeric(year)) %>%
complete(year = c(2025,2030,2035,2040,2045,2050,2055,2060,2070,2080,2090,2100)) %>%
mutate(tech = as.character(tech)) %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = as.vector(unlist(tech_dict[tech])),
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
out_t <- rep_Tech %>%
complete(tech, nesting(year), fill = list(value = 0))
View(out_t)
out_t <- rep_Tech %>%
complete(year, nesting(tech), fill = list(value = 0))
out_t <- rep_Tech %>%
expand(year, nesting(tech), fill = list(value = 0))
out_t <- rep_Tech %>%
expand(tech, nesting(year), fill = list(value = 0))
View(out_t)
out_t <- rep_Tech %>%
complete(tech, nesting(year), fill = list(value = 0))
out_t <- rep_Tech %>%
ungroup() %>%
complete(tech, nesting(year), fill = list(value = 0))
out_t <- rep_Tech %>%
ungroup() %>%
complete(year)
out_t <- rep_Tech %>%
ungroup() %>%
complete(year, fill = list(value = 0))
View(out_t)
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech',factors = FALSE)
names(rep_Tech) <- c("gdxfile", "model","year", "country","variable", "tech", "value")
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech', squeeze = FALSE, factors = FALSE)
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech', factors = FALSE)
names(rep_Tech) <- c("gdxfile", "model","year", "country","variable", "tech", "value")
out_t <- rep_Tech %>%
ungroup() %>%
complete(year, fill = list(value = 0))
out_t <- rep_Tech %>%
ungroup() %>%
complete(year, tech, fill = list(value = 0))
out_t <- rep_Tech %>%
complete(year, tech, fill = list(value = 0))
# get data from config.R file
# file: config.R
require(quitte)
require(gdxrrw)
require(tidyverse)
options(scipen = 999) #disable scientific notation
mypath = "~/remind/dataprocessing/DIETER_plots/"
mydatapath = "~/remind/output/capfac15/"
source(paste0(mypath, "library_import.R"))
igdx("/opt/gams/gams30.2_linux_x64_64_sfx")
variable_units <- read.csv(paste0(mypath, "variable_dict.csv"), sep = ',', header = T, stringsAsFactors = F)
variables <- unique(variable_units$dieter_name)
variable_dict <- setNames(as.list(variable_units$report_name), variable_units$dieter_name)
unit_dict <- setNames(as.list(variable_units$Units), variable_units$dieter_name)
# CHECK IF THE SEPERATOR IS CORRECT!!!!!!!!!! sometimes it is changed from ; to , in Linux and windows
tech_dictionary <- read.csv(paste0(mypath, "tech_dict.csv"), sep = ",", header = T, stringsAsFactors = F)
tech_dict <- setNames(as.list(tech_dictionary$report_name), tech_dictionary$dieter_name)
gdxToQuitte <- function(gdxfile){
gdxfile = "report_DIETER_i5.gdx"
file = paste0(mydatapath, gdxfile)
out_annual <- NULL
###########################################################################################################################
rep = read.gdx(gdxName = file, requestList = 'report', factors = FALSE)
names(rep) <- c("gdxfile", "model","year", "country","variable", "value")
out <- rep %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = "all Tech",
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech', factors = FALSE)
names(rep_Tech) <- c("gdxfile", "model","year", "country","variable", "tech", "value")
out_t <- rep_Tech %>%
complete(year, tech, fill = list(value = 0))
mutate(tech = as.character(tech)) %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = as.vector(unlist(tech_dict[tech])),
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
#################################################################
out_annual <- rbind(out_annual, out)
out_annual <- rbind(out_annual, out_t)
idx <- as.numeric(str_extract(gdxfile, "[0-9]+"))
write.table(out_annual, paste0(mypath, "capfac15_i", idx, "_annualreport.csv"), sep = ";", row.names = F)
print(paste0("csv table saved to", mypath))
}
gdxfile = "report_DIETER_i5.gdx"
file = paste0(mydatapath, gdxfile)
out_annual <- NULL
###########################################################################################################################
rep = read.gdx(gdxName = file, requestList = 'report', factors = FALSE)
names(rep) <- c("gdxfile", "model","year", "country","variable", "value")
out <- rep %>%
mutate(MODEL = model, SCENARIO = paste0("baseline"),
REGION = country, YEAR = year, VALUE = round(value, digits = 4),
TECH = "all Tech",
VARIABLE = as.vector(unlist(variable_dict[variable])),
UNIT = as.vector(unlist(unit_dict[variable])), PERIOD = "annual") %>%
arrange(YEAR) %>%
select(MODEL, SCENARIO, YEAR, REGION, PERIOD, VARIABLE, TECH, VALUE, UNIT)
#################################################################
rep_Tech = read.gdx(gdxName = file, requestList = 'report_tech', factors = FALSE)
names(rep_Tech) <- c("gdxfile", "model","year", "country","variable", "tech", "value")
out_t <- rep_Tech %>%
complete(year, tech, fill = list(value = 0))
out_t <- rep_Tech %>%
complete(year, nesting("gdxfile", "model","year", "country","variable", "tech", "value"), fill = list(value = 0))
out_t <- rep_Tech %>%
complete(year, nesting(variable, tech), fill = list(value = 0))
# import library
source(paste0(mypath, "library_import.R"))
source(paste0(mypath, "GDXtoQuitte.R"))
library(readr)
require(rmndt)
#remind output iteration gdx files
files <- list.files(mydatapath, pattern="fulldata_[0-9]+\\.gdx")
# import library
source(paste0(mypath, "library_import.R"))
source(paste0(mypath, "GDXtoQuitte.R"))
mypath = "~/remind/dataprocessing/"
mydatapath = "~/remind/output/capfac15/"
# import library
source(paste0(mypath, "library_import.R"))
source(paste0(mypath, "GDXtoQuitte.R"))
library(readr)
require(rmndt)
#remind output iteration gdx files
files <- list.files(mydatapath, pattern="fulldata_[0-9]+\\.gdx")
sorted_files <- paste0(mydatapath, "fulldata_", 1:length(files), ".gdx")
#dieter output iteration gdx files
files_DT_rep <- list.files(mydatapath, pattern="report_DIETER_i[0-9]+\\.gdx")
sorted_files_DT_rep <- paste0(mydatapath, "report_DIETER_i", seq(from = 5, to = length(files_DT_rep)*5, by = 5), ".gdx")
for(fname in files_DT_rep){
gdxToQuitte(fname)
}
#dieter output iteration gdx files
sorted_annual_report_DT <- paste0(mypath, "capfac15_i", seq(from = 5, to = length(files_DT_rep)*5, by = 5), "_annualreport.csv")
iteration = 5
VARkey1 = "vm_cap"
REGIkey1 = "DEU"
TECHkeylst_peakGas = c("ngt")
TECHkeylst_nonPeakGas = c("ngccc","ngcc",  "gaschp")
TECHkeylst_coal = c("coalchp", "igccc", "igcc", "pcc", "pco","pc")
TECHkeylst_solar = c("spv")
TECHkeylst_wind = c("wind")
TECHkeylst_hydro = c("hydro")
TECHkeylst_biomass = c("biochp", "bioigccc", "bioigcc")
grade = "1"
TECHkeylst <- c(TECHkeylst_peakGas, TECHkeylst_nonPeakGas, TECHkeylst_coal, TECHkeylst_solar, TECHkeylst_wind, TECHkeylst_hydro,TECHkeylst_biomass)
VAR_report_key1_DT = c("Pre-investment capacities", "Installed capacity")
TECH_report_keylst_DT = c("CCGT", "Lignite", "Solar PV", "Wind_on", "Biomass", "OCGT_eff", "Run-of-River")
plot_te_names = c("combined cycle gas", "coal", "solar", "wind", "biomass", "open cycle gas turbine", "hydro")
mycolors <- c("combined cycle gas" = "#999959", "coal" = "#0c0c0c", "solar" = "#ffcc00", "wind" = "#337fff", "biomass" = "#005900", "open cycle gas turbine" = "#e51900", "hydro" =  "#191999")
get_report_variable_DT <- function(cvs){
cvs = sorted_annual_report_DT[[1]]
annual_reportCSV = read.csv(cvs, sep = ';', header = T, stringsAsFactors = F)
annual_reportQUITT <- as.quitte(annual_reportCSV)
vrdata <- annual_reportQUITT %>%
# filter(period == "2025") %>%
filter(tech %in% TECH_report_keylst_DT)%>%
filter(variable %in% VAR_report_key1_DT) %>%
select(period, tech, variable, value) %>%
mutate(tech = str_replace(tech, TECH_report_keylst_DT[[1]], plot_te_names[[1]])) %>%
mutate(tech = str_replace(tech, TECH_report_keylst_DT[[2]], plot_te_names[[2]])) %>%
mutate(tech = str_replace(tech, TECH_report_keylst_DT[[3]], plot_te_names[[3]])) %>%
mutate(tech = str_replace(tech, TECH_report_keylst_DT[[4]], plot_te_names[[4]])) %>%
mutate(tech = str_replace(tech, TECH_report_keylst_DT[[5]], plot_te_names[[5]])) %>%
mutate(tech = str_replace(tech, TECH_report_keylst_DT[[6]], plot_te_names[[6]])) %>%
mutate(tech = str_replace(tech, TECH_report_keylst_DT[[7]], plot_te_names[[7]]))
return(vrdata)
}
get_variable <- function(gdx){
# gdx = sorted_files[[1]]
vrdata <- read.gdx(gdx, VARkey1, factors = FALSE) %>%
# filter(tall == year_toplot) %>%
filter(tall > 2020) %>%
filter(tall < 2110) %>%
filter(all_regi == REGIkey1) %>%
filter(all_te %in% TECHkeylst) %>%
filter(rlf == grade) %>%
mutate(value = value*1e3) %>%
mutate(variable = "capacity") %>%
mutate(variable = str_replace(variable, "capacity", "Post-investment capacities")) %>%
select(all_te, variable, value, tall) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_biomass[[1]], plot_te_names[[5]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_biomass[[2]], plot_te_names[[5]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_biomass[[3]], plot_te_names[[5]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_nonPeakGas[[1]], plot_te_names[[1]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_nonPeakGas[[2]], plot_te_names[[1]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_nonPeakGas[[3]], plot_te_names[[1]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_coal[[1]], plot_te_names[[2]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_coal[[2]], plot_te_names[[2]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_coal[[3]], plot_te_names[[2]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_coal[[4]], plot_te_names[[2]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_coal[[5]], plot_te_names[[2]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_coal[[6]], plot_te_names[[2]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_solar[[1]], plot_te_names[[3]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_wind[[1]], plot_te_names[[4]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_hydro[[1]], plot_te_names[[7]])) %>%
mutate(all_te = str_replace(all_te, TECHkeylst_peakGas[[1]], plot_te_names[[6]])) %>%
dplyr::group_by(tall, all_te, variable) %>%
dplyr::summarise( value = sum(value) ) %>%
dplyr::ungroup(tall, all_te, variable)%>%
dplyr::rename(tech = all_te) %>%
dplyr::rename(period = tall)
vrdata$tech <- factor(vrdata$tech, levels= c("solar", "wind", "combined cycle gas", "coal", "biomass", "open cycle gas turbine", "hydro"))
return(vrdata)
}
vrNlist <- lapply(sorted_files, get_variable)
vrN_rep_DTlist  <- lapply(sorted_annual_report_DT, get_report_variable_DT)
#===================================================
idx_DT <- 1:length(files_DT_rep)
for(id in idx_DT){
vrN_rep_DTlist[[id]]$iter <- id*5
}
vrN_rep_DT0 <- rbindlist(vrN_rep_DTlist)
preInvest <- vrN_rep_DT0 %>%
filter(variable == "Pre-investment capacities") %>%
filter(iter == iteration) %>%
select(period, tech, value, iter) %>%
dplyr::rename(preInvest = value)
for(fname in files){
idx <- as.numeric(str_extract(fname, "[0-9]+"))
vrNlist[[idx]]$iter <- idx
vrNlist[[idx]]$model <- "REMIND"
}
vrN0 <- rbindlist(vrNlist)
vrN <- vrN0 %>%
filter(iter == iteration)
addedCap0 = list(vrN, preInvest) %>%
reduce(full_join)
addedCap <- addedCap0 %>%
mutate(value = value - preInvest) %>%
mutate(variable = str_replace(variable, "Installed capacity", "Post-investment capacities")) %>%
select(period, tech, variable, value, iter, model)
vrN_plot = list(vrN, addedCap) %>%
reduce(full_join)
vrN_rep_DT <- vrN_rep_DT0 %>%
filter(variable == "Installed capacity")%>%
filter(iter == iteration) %>%
mutate(variable = str_replace(variable, "Installed capacity", "Post-investment capacities")) %>%
mutate(period = as.numeric(period))
View(vrN_rep_DT)
addedCap0 = list(vrN_rep_DT, preInvest) %>%
reduce(full_join)
addedCap_DT <- addedCap_DT0 %>%
mutate(value = value - preInvest) %>%
mutate(variable = str_replace(variable, "Installed capacity", "Post-investment capacities")) %>%
select(period, tech, variable, value, iter, model)
vrN_DT_plot = list(vrN_rep_DT, addedCap_DT) %>%
reduce(full_join)
vrN_DT_plot$variable <- factor(vrN_DT_plot$variable, levels= unique(vrN_DT_plot$variable), ordered=TRUE)
addedCap_DT <- addedCap_DT0 %>%
mutate(value = value - preInvest) %>%
mutate(variable = str_replace(variable, "Installed capacity", "Post-investment capacities")) %>%
select(period, tech, variable, value, iter, model)
addedCap_DT0 = list(vrN_rep_DT, preInvest) %>%
reduce(full_join)
addedCap_DT <- addedCap_DT0 %>%
mutate(value = value - preInvest) %>%
mutate(variable = str_replace(variable, "Installed capacity", "Post-investment capacities")) %>%
select(period, tech, variable, value, iter, model)
vrN_rep_DT <- vrN_rep_DT0 %>%
filter(variable == "Installed capacity")%>%
filter(iter == iteration) %>%
mutate(variable = str_replace(variable, "Installed capacity", "Post-investment capacities")) %>%
mutate(period = as.numeric(period))
